@use "../../../styles/variables.scss";
@use "../../../styles/typography.scss";
@use "sass:color";

$page-spacing: 3rem;
$large-breakpoint-page-spacing: 2rem;
$small-breakpoint-page-spacing: 2rem;

// Research single class vs nested hierarchy and rearrange if needed

.page-layout {
    height: 100%;
    width: 100%;
    padding: $page-spacing;
    display: grid;
    gap: $page-spacing;
    align-items: center;
    grid-template-columns: minmax(25rem, auto) auto;
    grid-template-rows: minmax(0, auto) minmax(0, 1fr);
    grid-template-areas:
        "header header"
        "image description";

    @media (max-width: variables.$breakpoint-large) {
        padding: $large-breakpoint-page-spacing;
        gap: $large-breakpoint-page-spacing;
        justify-items: center;
        grid-template-columns: 100%;
        grid-template-rows: auto minmax(0, 1fr) auto;
        grid-template-areas:
            "header"
            "image"
            "description";
    }

    @media (max-width: variables.$breakpoint-small) {
        height: auto;
        overflow-y: auto;
        padding: calc($small-breakpoint-page-spacing / 2);
        gap: $small-breakpoint-page-spacing;
        grid-template-rows: auto auto minmax(0, 1fr);
    }
}

.header {
    grid-area: header;
    display: grid;
    align-items: center;
    column-gap: 5rem;
    row-gap: 1rem;
    grid-template-columns: minmax(0, max-content) auto;
    grid-template-rows: minmax(0, auto) minmax(0, auto);
    grid-template-areas:
        "link empty"
        "name selector";

    @media (max-width: variables.$breakpoint-large) {
        grid-template-columns: 1fr;
        grid-template-rows: minmax(0, auto) minmax(0, auto) minmax(0, auto);
        grid-template-areas:
            "link"
            "name"
            "selector";
    }
}

// Try scrapping the grid idea and moving this on top of the image itself
.image-selector {
    grid-area: selector;
    display: flex;
    gap: 5rem;

    @media (max-width: variables.$breakpoint-large) {
        justify-self: center;
    }
}

.image-selector-button {
    @extend %h6;
    display: flex;
    align-items: center;
    gap: 1rem;
}

.name {
    grid-area: name;
    text-transform: capitalize;

    @media (max-width: variables.$breakpoint-large) {
        text-align: center;
    }
}

.image {
    height: auto;
    width: auto;
    grid-area: image;
    border-radius: 0.75rem;

    @media (max-width: variables.$breakpoint-small) {
        align-self: flex-start;
    }
}

.description {
    //@extend %h5;
    grid-area: description;
    border: 0.125rem solid variables.$color-accent;
    border-radius: 0.75rem;
    background-color: variables.$color-secondary;
    padding: $page-spacing;

    @media (max-width: variables.$breakpoint-large) {
        padding: $large-breakpoint-page-spacing;
    }

    @media (max-width: variables.$breakpoint-small) {
        padding: $small-breakpoint-page-spacing;
    }
}

.back-link {
    //@extend %h5;
    grid-area: link;
    display: flex;
    align-items: center;
    gap: 0.5rem;

    &:hover {
        // figure out a better color for this
        color: variables.$color-accent;
    }
}

.back-icon {
    height: 2rem;
    width: 2rem;
}

.selector-icon {
    height: 3rem;
    width: 3rem;

    @media (max-width: variables.$breakpoint-small) {
        height: 2rem;
        width: 2rem;
    }
}
